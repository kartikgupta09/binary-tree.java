public class queueimpli {
    public static class Queue {
        static int size;
        static int[] arr;
        static int rear = -1;
        Queue(int size){
            arr = new int[size];
            this.size = size;


        }
        public static boolean isEmpty(){

            return rear == -1;
        }
        /*enqueue adding element in an queue if there is a space present by checking using the fn isEmpty*/
        public static void add(int data){
            if(rear == size-1){
                System.out.println("queue is full");
            }
            rear++;
            arr[rear] = data;
        }
        public static int remove(){
            if(rear == -1){
                System.out.println("queue is empty");
                return -1;
            }
            int front = arr[0];
            for(int i = 0;i<rear;i++){
                arr[i] = arr[i+1];
            }
            rear--;
            return front;
        }
        public static int get(){
            if(rear == -1){
                System.out.println("Queue is empty");
                return -1;
            }
            int top = arr[0];
            return top;


        }

    }
    public static void main(String[] args) {
        Queue q = new Queue(4);
        q.add(1);
        q.add(2);
        q.add(3);
        while(!q.isEmpty()){
            System.out.println(q.get());
            q.remove();
        }
    }
}
